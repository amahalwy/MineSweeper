/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
eval("document.addEventListener('DOMContentLoaded', () => {\n  let grid = document.querySelector('.grid');\n  const remainingFlags = document.querySelector('#rem-flags');\n  const result = document.querySelector('#result');\n  const reset = document.querySelector('#reset');\n  const newGame10 = document.querySelector('#new10');\n  const newGame20 = document.querySelector('#new20');\n  const newGame30 = document.querySelector('#new30');\n  \n  function createGame10() {\n    grid.classList.add('game-10')\n    createBoard(10);\n  }\n  \n  function createGame20() {\n    grid.classList.add('game-20')\n    createBoard(20);\n  }\n  \n  function createGame30() {\n    grid.classList.add('game-30')\n    createBoard(30);\n  }\n  \n  // Removing listeners\n  function removeLists() {\n    newGame10.removeEventListener('click', createGame10);\n    newGame10.classList.add('disabled');\n    newGame20.removeEventListener('click', createGame20);\n    newGame20.classList.add('disabled');\n    // newGame30.removeEventListener('click', createGame30);\n    // newGame30.classList.add('disabled');\n  }\n  \n  // Adding listeners\n  function addLists(){\n    newGame10.addEventListener('click', createGame10);\n    newGame10.classList.remove('disabled');\n    newGame20.addEventListener('click', createGame20);\n    newGame20.classList.remove('disabled');\n    // newGame30.addEventListener('click', createGame30);\n    // newGame30.classList.remove('disabled');\n  }\n  \n  // reset.addEventListener('click', () => {\n  //   resetBoard();\n  //   setTimeout(()=>{\n\n  //     createBoard(10);\n  //   },1000)\n  // });\n  reset.addEventListener('click', refreshPage);\n\n\n  addLists();\n\n  // Global variables for function(s) use\n  let flags = 0;\n  let squares = [];\n  let isGameOver = false;\n  \n  function refreshPage() {\n    location = location;\n    return false;\n  }\n\n  // function resetBoard() {\n  //   const newGrid = document.createElement('div');\n  //   newGrid.classList.add('grid');\n  //   newGrid.classList.add('hidden');    \n  //   grid.parentNode.replaceChild(newGrid, grid);\n  //   grid = document.querySelector('.grid');\n  //   isGameOver = false;\n  //   addLists();\n  //   location = location;\n  //   return false;\n  // }\n\n  // Create Board\n  function createBoard(n) {\n    grid.classList.remove('hidden');\n    removeLists();\n\n    width = n;\n    bombs = (width*width)/5;\n    remainingFlags.innerHTML = bombs;\n\n    const bombsArr = Array(bombs).fill('bomb');\n    const emptyArr = Array(width * width - bombs).fill('valid');\n    const gameArray = emptyArr.concat(bombsArr);\n    const shuffledArray = gameArray.sort(() => Math.random() -0.5); // Random shuffle the array\n\n    for (let i = 0; i < width * width; i++) {\n      const square = document.createElement('div');\n      square.setAttribute('id', i);\n      square.classList.add(shuffledArray[i])\n      grid.appendChild(square);\n      squares.push(square);\n\n      // Left click listener\n      square.addEventListener('click', () => {\n        leftClick(square);\n      })\n\n      // Right click listener\n      square.oncontextmenu = function(e) {\n        e.preventDefault();\n        addFlag(square);\n      }\n    }\n    \n    // if (width === 10) alert(\"Welcome to a 10x10 Game!!\")\n    // if (width === 20) alert(\"Welcome to a 20x20 Game!!\")\n    // if (width === 10) alert(\"Welcome to a 10x10 Game!!\")\n    for (let i = 0; i < squares.length; i++) {\n      let total = 0;\n      const isLeft = (i % width === 0); // Left edge square\n      const isRight = (i % width === width - 1); // Right edge square\n\n      // This is valid for 10x10 game; needs work for 20x20 and 30x30\n      if (squares[i].classList.contains('valid') && width === 10) {\n        if (i > 0 && !isLeft && squares[i - 1].classList.contains('bomb')) total ++; // Top row, check if bomb left of spot\n        if (i > 9 && !isRight && squares[i + 1 - width].classList.contains('bomb')) total ++; // Second row, check up 1, right 1\n        if (i > 10 && squares[i - width].classList.contains('bomb')) total ++; // Check up 1\n        if (i > 11 && !isLeft && squares[i - 1 - width].classList.contains('bomb')) total ++; //Check up 1, left 1 \n        if (i < 98 && !isRight && squares[i + 1].classList.contains('bomb')) total ++; // Check right 1 \n        if (i < 90 && !isLeft && squares[i - 1 + width].classList.contains('bomb')) total ++; // Check down 1, left 1\n        if (i < 88 && !isRight && squares[i + 1 + width].classList.contains('bomb')) total ++; // Check down 1, right 1\n        if (i < 89 && squares[i + width].classList.contains('bomb')) total ++; // Check down 1 \n        squares[i].setAttribute('data', total);\n      } else if (squares[i].classList.contains('valid') && width === 20) {\n        // 20x20 Game\n        if (i > 0 && !isLeft && squares[i - 1].classList.contains('bomb')) total ++; // Top row, check if bomb left of spot\n        if (i > 19 && !isRight && squares[i + 1 - width].classList.contains('bomb')) total ++; // Second row, check up 1, right 1\n        if (i > 20 && squares[i - width].classList.contains('bomb')) total ++; // Check up 1\n        if (i > 21 && !isLeft && squares[i - 1 - width].classList.contains('bomb')) total ++; //Check up 1, left 1 \n        if (i < 388 && !isRight && squares[i + 1].classList.contains('bomb')) total ++; // Check right 1 \n        if (i < 380 && !isLeft && squares[i - 1 + width].classList.contains('bomb')) total ++; // Check down 1, left 1\n        if (i < 378 && !isRight && squares[i + 1 + width].classList.contains('bomb')) total ++; // Check down 1, right 1\n        if (i < 379 && squares[i + width].classList.contains('bomb')) total ++; // Check down 1 \n        squares[i].setAttribute('data', total);\n      } else if (squares[i].classList.contains('valid') && width === 30) {\n        // 30x30 Game\n      }\n    }\n  }\n\n  function addFlag(square) {\n    if (isGameOver) return;\n    if (!square.classList.contains('checked') && (flags < bombs)) {\n      if (!square.classList.contains('flag')) {\n        square.classList.add('flag');\n        square.innerHTML = 'ðŸš©';\n        flags ++;\n        remainingFlags.innerHTML = bombs - flags\n        checkWin();\n      } else {\n        square.classList.remove('flag');\n        square.innerHTML = '';\n        flags --;\n        remainingFlags.innerHTML = bombs - flags\n      }\n    }\n  }\n\n  // Left click on square\n  function leftClick(square) {\n    \n    let id = square.id;\n    if (isGameOver) return;\n    if (\n    square.classList.contains('checked') || \n    square.classList.contains('flag')\n    ) return;\n\n    if (square.classList.contains('bomb')) {\n      gameOver(square);\n    } else {\n      let totalBombs = square.getAttribute('data');\n      if (totalBombs != 0) {\n        square.classList.add('checked');\n        square.innerHTML = totalBombs;\n        return;\n      }\n      check(square, id);\n    }\n    square.classList.add('checked');\n  }\n\n\n  // Check squares beside the clicked square\n  function check(square, id) {\n    if (width === 20) {\n      const isLeft = (id % width === 0);\n      const isRight = (id % width === width - 1);\n  \n      setTimeout(() => {\n        if (id > 0 && !isLeft) {\n          const newId = squares[parseInt(id) -1].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id > 9 && !isRight) {\n          const newId = squares[parseInt(id) + 1 - width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id > 10) {\n          const newId = squares[parseInt(id - width)].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id > 11 && !isLeft) {\n          const newId = squares[parseInt(id) -1 - width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id < 388 && !isRight) {\n          const newId = squares[parseInt(id) +1].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id < 380 && !isLeft) {\n          const newId = squares[parseInt(id) - 1 + width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id < 378 && !isRight ) {\n          const newId = squares[parseInt(id) + 1 + width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id < 379) {\n          const newId = squares[parseInt(id) + width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n      }, 10)\n    } else if (width === 10) {\n      const isLeft = (id % width === 0);\n      const isRight = (id % width === width - 1);\n\n      setTimeout(() => {\n        if (id > 0 && !isLeft) {\n          const newId = squares[parseInt(id) -1].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id > 9 && !isRight) {\n          const newId = squares[parseInt(id) + 1 - width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id > 10) {\n          const newId = squares[parseInt(id - width)].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id > 11 && !isLeft) {\n          const newId = squares[parseInt(id) -1 - width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n\n        if (id < 98 && !isRight) {\n          const newId = squares[parseInt(id) +1].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id < 90 && !isLeft) {\n          const newId = squares[parseInt(id) - 1 + width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id < 88 && !isRight ) {\n          const newId = squares[parseInt(id) + 1 + width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n  \n        if (id < 89) {\n          const newId = squares[parseInt(id) + width].id;\n          const newSquare = document.getElementById(newId);\n          leftClick(newSquare);\n        }\n      }, 10)\n    }\n  }\n\n  function gameOver(square) {\n    result.innerHTML = \"BOOM!! Game over :(\"\n    isGameOver = true;\n\n    squares.forEach(square => {\n      if (square.classList.contains('bomb')) {\n        square.innerHTML = \"ðŸ’£'\";\n        square.classList.remove('bomb');\n        square.classList.add('checked');\n      }\n    })\n  }\n\n  function checkWin() {\n    let bombsFound = 0;\n    for (let i = 0; i < squares.length; i++) {\n      if (squares[i].classList.contains('flag') && squares[i].classList.contains('bomb')) {\n        bombsFound ++;\n      }\n      if (bombsFound === bombs) {\n        result.innerHTML = \"YOU WIN!\";\n        isGameOver = true;\n      }\n    }\n  }\n})\n\n//# sourceURL=webpack://msweep/./src/app.js?");
/******/ })()
;